{"version":3,"sources":["assets/logo.png","js/Variant.js","js/Product.js","js/Item.js","js/App.js","js/serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Variant","props","react_default","a","createElement","className","data","title","selected","key","id","onClick","e","onVariantClick","Product","_useState","useState","variants","_useState2","Object","slicedToArray","selectVariant","setSelectVariant","handleSizeChange","newSize","alt","src","images","price","split","map","variant","js_Variant","available","cart","Item","removeItem","quantity","App","products","setProducts","_useState3","localStorage","getItem","_useState4","checkoutId","setCheckoutId","_useState5","_useState6","cartModal","setCartModal","_useState7","_useState8","currentCheckout","setCurrentCheckout","addToCart","lineItemsToAdd","variantId","client","checkout","addLineItems","then","removeFromCart","lineItemIdsToRemove","removeLineItems","console","log","closeCart","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","product","fetchAll","sent","stop","apply","this","arguments","fetchProducts","create","setItem","fetch","catch","error","lib_default","isOpen","onRequestClose","appElement","document","getElementById","overlayClassName","closeTimeoutMS","lineItems","length","item","js_Item","totalPrice","window","open","webUrl","logo","js_Product","href","target","rel","Boolean","location","hostname","match","Client","buildClient","domain","storefrontAccessToken","ReactDOM","render","js_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.194dcb23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04958462.png\";","import React from \"react\";\nimport \"../css/App.css\";\n\nfunction Variant(props) {\n  function onSizeClick(e) {\n    props.onVariantClick(props.data);\n  }\n\n  return (\n    <div\n      className={\n        props.data.title === props.selected.title ? \"selected\" : \"size\"\n      }\n      key={props.data.id}\n      onClick={onSizeClick}\n    >\n      {props.data.title}\n    </div>\n  );\n}\n\nexport default Variant;\n","import React, { useState } from \"react\";\nimport Variant from \"./Variant\";\nimport \"../css/App.css\";\n\nfunction Product(props) {\n  const [selectVariant, setSelectVariant] = useState(props.data.variants[0]);\n\n  function handleSizeChange(newSize) {\n    setSelectVariant(newSize);\n  }\n\n  function addItem() {\n    props.cart(selectVariant.id);\n  }\n\n  return (\n    <div className=\"product\">\n      <img\n        className=\"product-img\"\n        alt={props.data.title + \" image\"}\n        src={props.data.images[0].src}\n      />\n      <div className=\"product-name\">{props.data.title}</div>\n      <div className=\"product-price\">\n        {props.data.variants[0].price.split(\".\")[0]}â‚¬\n      </div>\n      {props.data.variants[0].title !== \"Default Title\" && (\n        <div className=\"product-variants\">\n          {props.data.variants.map(variant => {\n            return (\n              <Variant\n                selected={selectVariant}\n                data={variant}\n                onVariantClick={handleSizeChange}\n                key={variant.id}\n              />\n            );\n          })}\n        </div>\n      )}\n      {selectVariant.available ? (\n        <div className=\"add-to-cart\" onClick={addItem}>\n          add to cart\n        </div>\n      ) : (\n        <div className=\"sold-out\">ðŸ’€sold out ðŸ’€</div>\n      )}\n    </div>\n  );\n}\n\nexport default Product;\n","import React from \"react\";\nimport \"../css/App.css\";\n\nfunction Item(props) {\n  function onRemoveItem(e) {\n    props.removeItem(props.data.id);\n  }\n\n  return (\n    <div className=\"cart-item\">\n      <div className=\"remove-item\" onClick={onRemoveItem}>\n        X\n      </div>\n      <div className=\"item-quantity\">{props.data.quantity}x</div>\n      <div className=\"item-name\">{props.data.title}</div>\n      {props.data.variant.title !== \"Default Title\" && (\n        <div className=\"item-size\">size {props.data.variant.title}</div>\n      )}\n      <div className=\"item-price\">\n        {props.data.variant.price.split(\".\")[0]}â‚¬\n      </div>\n    </div>\n  );\n}\n\nexport default Item;\n","import React, { useState, useEffect } from \"react\";\nimport Product from \"./Product\";\nimport Item from \"./Item\";\nimport Modal from \"react-modal\";\nimport logo from \"../assets/logo.png\";\nimport \"../css/App.css\";\n\nfunction App(props) {\n  const [products, setProducts] = useState([]);\n  const [checkoutId, setCheckoutId] = useState(\n    localStorage.getItem(\"checkoutId\")\n  );\n  const [cartModal, setCartModal] = useState(false);\n  const [currentCheckout, setCurrentCheckout] = useState();\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const result = await props.client.product.fetchAll();\n      setProducts(result);\n    };\n    fetchProducts();\n  }, []);\n\n  useEffect(() => {\n    if (checkoutId == null) {\n      // console.log(\"creating new cart\");\n      props.client.checkout.create().then(checkout => {\n        localStorage.setItem(\"checkoutId\", checkout.id);\n        setCurrentCheckout(checkout);\n        setCheckoutId(checkout.id);\n      });\n    } else {\n      // console.log(\"loading existing cart\");\n      props.client.checkout\n        .fetch(checkoutId)\n        .then(checkout => {\n          setCurrentCheckout(checkout);\n        })\n        .catch(error => {\n          props.client.checkout.create().then(checkout => {\n            localStorage.setItem(\"checkoutId\", checkout.id);\n            setCheckoutId(checkout.id);\n          });\n        });\n    }\n  }, []);\n\n  function addToCart(variant) {\n    const lineItemsToAdd = {\n      variantId: variant,\n      quantity: 1\n    };\n\n    props.client.checkout\n      .addLineItems(checkoutId, lineItemsToAdd)\n      .then(checkout => {\n        setCurrentCheckout(checkout);\n      });\n  }\n\n  function removeFromCart(variant) {\n    const lineItemIdsToRemove = [variant];\n\n    props.client.checkout\n      .removeLineItems(checkoutId, lineItemIdsToRemove)\n      .then(checkout => {\n        setCurrentCheckout(checkout);\n        console.log(checkout);\n      });\n  }\n\n  function openShopifyCart(e) {\n    props.client.checkout.fetch(checkoutId).then(checkout => {\n      if (checkout.lineItems.length > 0) window.open(checkout.webUrl);\n    });\n  }\n\n  function openCart(e) {\n    setCartModal(true);\n  }\n\n  function closeCart() {\n    setCartModal(false);\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={cartModal}\n        onRequestClose={closeCart}\n        appElement={document.getElementById(\"App\")}\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n        closeTimeoutMS={200}\n      >\n        <button className=\"closeModal\" onClick={closeCart}>\n          back\n        </button>\n        {currentCheckout && currentCheckout.lineItems.length > 0 && (\n          <div>\n            <div className=\"cart-contents\">\n              {currentCheckout.lineItems.map(item => {\n                return (\n                  <Item data={item} removeItem={removeFromCart} key={item.id} />\n                );\n              })}\n            </div>\n            <div className=\"total-price\">\n              total:{\" \"}\n              {currentCheckout && currentCheckout.totalPrice.split(\".\")[0]}â‚¬\n            </div>\n            <button className=\"checkout-btn\" onClick={openShopifyCart}>\n              Check Out\n            </button>\n          </div>\n        )}\n      </Modal>\n\n      <div id=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"florange-logo\" alt=\"logo\" />\n        </header>\n\n        {products.map(product => {\n          return (\n            <Product\n              key={product.id}\n              data={product}\n              cart={addToCart}\n              // images={product.images}\n              // title={product.title}\n              // price={}\n            />\n          );\n        })}\n        <footer className=\"App-footer\" />\n        <div className=\"shopping-cart\" onClick={openCart}>\n          Cart\n        </div>\n        <div className=\"contact-links\">\n          <a\n            href=\"https://www.instagram.com/florangedesign/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Instagram\n          </a>\n          <a href=\"mailto:someone@yoursite.com\">Contact</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Client from \"shopify-buy\";\nimport \"./css/index.css\";\nimport App from \"./js/App\";\nimport * as serviceWorker from \"./js/serviceWorker\";\n\nconst client = Client.buildClient({\n  domain: \"florange-store.myshopify.com\",\n  storefrontAccessToken: \"3778d6a550469c0e275fa2399f74406e\"\n});\n\nReactDOM.render(<App client={client} />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}